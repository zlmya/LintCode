Description
	Given an integer array, sort it in ascending order. Use selection sort, bubble sort, insertion sort or any O(n2) algorithm.

Example
	Example 1:
	Input:  [3, 2, 1, 4, 5]
	Output: [1, 2, 3, 4, 5]
	
	Explanation: 
	return the sorted array.

	Example 2:
	Input:  [1, 1, 2, 1, 1]
	Output: [1, 1, 1, 1, 2]
	
	Explanation: 
	return the sorted array.
	
Mysubmission
	public class Solution {
		/**
		 * @param A: an integer array
		 * @return: nothing
		 */
		public void sortIntegers(int[] A) {
			// write your code here
			//Bubble Sort
			/*for(int i = 1; i < A.length; i++){
				for(int j = 0; j < A.length - i; j++){
					if(A[j] > A[j+1]){
						int temp = A[j];
						A[j] = A[j+1];
						A[j+1] = temp;
					}
				}
			}*/

			//Select Sort
			/*for(int i = 0; i < A.length; i++){
				int min = A[i];
				for(int j = i + 1; j < A.length; j++){
					if(A[j] < min){
						int temp = A[i];
						A[i] = A[j];
						A[j] = temp;
					}
					min = A[i];
				}
			}*/

			//Insert Sort
			for(int i = 1; i < A.length; i++){
				for(int j = i; j > 0; j--){
					if(A[j] < A[j-1]){
						int temp = A[j];
						A[j]=A[j-1];
						A[j-1]=temp;
					}
				}
			}
		}
	}
